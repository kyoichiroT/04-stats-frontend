export type MatchData = {
  matchNumber: number;
  firstPlayer: string;
  firstPlayer_isMobile: string;
  firstPlayerLP: number;
  secondPlayer: string;
  secondPlayer_isMobile: string;
  secondPlayerLP: number;
  winner: string;
  cause: string;
  turn_count: number;
  date: Date | string;
  firstPlayer_PotOfGreed: number;
  firstPlayer_theForcefulSentry: number;
  firstPlayer_confiscation: number;
  firstPlayer_PainfulChoice: number;
  firstPlayer_changeOfHeart: number;
  firstPlayer_snatchSteal: number;
  firstPlayer_magicianOfFaith: number;
  firstPlayer_donZaloog_hand: number;
  firstPlayer_spiritReaper: number;
  firstPlayer_injectionFairyLily: number;
  firstPlayer_fiberJar: number;
  firstPlayer_airknightParshath: number;
  firstPlayer_airknightParshath_summon: number;
  firstPlayer_Jinzo_summon: number;
  firstPlayer_blackLusterSoldier_summon: number;
  firstPlayer_monster_length: number;
  firstPlayer_monster1: number;
  firstPlayer_monster2: number;
  firstPlayer_monster3: number;
  firstPlayer_monster4: number;
  firstPlayer_monster5: number;
  firstPlayer_spell_trap_length: number;
  firstPlayer_spell_trap1: number;
  firstPlayer_spell_trap2: number;
  firstPlayer_spell_trap3: number;
  firstPlayer_spell_trap4: number;
  firstPlayer_spell_trap5: number;
  firstPlayer_hand_length: number;
  firstPlayer_hand_json: string;
  firstPlayer_grave_length: number;
  firstPlayer_grave_json: string;
  firstPlayer_banish_length: number;
  firstPlayer_banish_json: string;
  secondPlayer_PotOfGreed: number;
  secondPlayer_theForcefulSentry: number;
  secondPlayer_confiscation: number;
  secondPlayer_PainfulChoice: number;
  secondPlayer_changeOfHeart: number;
  secondPlayer_snatchSteal: number;
  secondPlayer_magicianOfFaith: number;
  secondPlayer_donZaloog_hand: number;
  secondPlayer_spiritReaper: number;
  secondPlayer_injectionFairyLily: number;
  secondPlayer_fiberJar: number;
  secondPlayer_airknightParshath: number;
  secondPlayer_airknightParshath_summon: number;
  secondPlayer_Jinzo_summon: number;
  secondPlayer_blackLusterSoldier_summon: number;
  secondPlayer_monster_length: number;
  secondPlayer_monster1: number;
  secondPlayer_monster2: number;
  secondPlayer_monster3: number;
  secondPlayer_monster4: number;
  secondPlayer_monster5: number;
  secondPlayer_spell_trap_length: number;
  secondPlayer_spell_trap1: number;
  secondPlayer_spell_trap2: number;
  secondPlayer_spell_trap3: number;
  secondPlayer_spell_trap4: number;
  secondPlayer_spell_trap5: number;
  secondPlayer_hand_length: number;
  secondPlayer_hand_json: string;
  secondPlayer_grave_length: number;
  secondPlayer_grave_json: string;
  secondPlayer_banish_length: number;
  secondPlayer_banish_json: string;
};

export type MatchDataWithWinRate = MatchData & {
  match_count: number;
  first_player_win: number;
  second_player_win: number;
  draw: number;
};
